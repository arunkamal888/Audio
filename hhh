import org.openqa.selenium.WebDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import org.json.JSONObject;
import java.io.FileOutputStream;
import java.io.InputStream;

public class SauceLabsAutomation {
    
    private static final String SAUCE_LABS_USERNAME = "your_username";
    private static final String SAUCE_LABS_ACCESS_KEY = "your_access_key";

    public static void main(String[] args) {
        WebDriver driver = new RemoteWebDriver(...); // Your WebDriver setup here
        
        // Get the session ID
        String sessionId = ((RemoteWebDriver) driver).getSessionId().toString();
        System.out.println("Session ID: " + sessionId);

        // Run your test
        driver.get("https://example.com");
        
        // Quit the driver
        driver.quit();

        // Wait for the session to finish and download the video
        waitForSauceLabsTestToFinish(sessionId);
    }

    public static void waitForSauceLabsTestToFinish(String sessionId) {
        String testStatusUrl = "https://api.us-west-1.saucelabs.com/v1/rdc/jobs/" + sessionId;
        String credentials = okhttp3.Credentials.basic(SAUCE_LABS_USERNAME, SAUCE_LABS_ACCESS_KEY);

        OkHttpClient client = new OkHttpClient();
        boolean isJobFinished = false;

        while (!isJobFinished) {
            try {
                Request request = new Request.Builder()
                        .url(testStatusUrl)
                        .header("Authorization", credentials)
                        .build();

                try (Response response = client.newCall(request).execute()) {
                    if (response.isSuccessful()) {
                        JSONObject jsonResponse = new JSONObject(response.body().string());
                        isJobFinished = jsonResponse.getBoolean("completed");
                    }
                }

                if (!isJobFinished) {
                    Thread.sleep(10000); // Wait for 10 seconds before checking again
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        System.out.println("Test is finished. Downloading video...");

        try {
            downloadSauceLabsVideo(sessionId);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void downloadSauceLabsVideo(String sessionId) throws Exception {
        String videoUrl = "https://api.us-west-1.saucelabs.com/v1/rdc/jobs/" + sessionId + "/assets/video.mp4";
        String credentials = okhttp3.Credentials.basic(SAUCE_LABS_USERNAME, SAUCE_LABS_ACCESS_KEY);

        OkHttpClient client = new OkHttpClient();

        Request request = new Request.Builder()
                .url(videoUrl)
                .header("Authorization", credentials)
                .build();

        try (Response response = client.newCall(request).execute()) {
            if (response.isSuccessful()) {
                InputStream inputStream = response.body().byteStream();
                FileOutputStream fileOutputStream = new FileOutputStream("path_to_save_video/video.mp4");

                byte[] buffer = new byte[1024];
                int bytesRead;

                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    fileOutputStream.write(buffer, 0, bytesRead);
                }

                inputStream.close();
                fileOutputStream.close();

                System.out.println("Video downloaded successfully.");
            } else {
                System.err.println("Failed to download video. HTTP Status Code: " + response.code());
            }
        }
    }
}
