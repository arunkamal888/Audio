import sys
import json
from vosk import Model, KaldiRecognizer
import wave

# Mapping of words to digits
num_word_to_digit = {
    'zero': '0', 'oh': '0', 'one': '1', 'two': '2', 'three': '3',
    'four': '4', 'five': '5', 'six': '6', 'seven': '7', 'eight': '8', 'nine': '9'
}

def transcribe_audio(model_path, audio_file):
    model = Model(model_path)
    wf = wave.open(audio_file, "rb")
    rec = KaldiRecognizer(model, wf.getframerate())

    results = []
    while True:
        data = wf.readframes(4000)
        if len(data) == 0:
            break
        if rec.AcceptWaveform(data):
            part_result = json.loads(rec.Result())
            results.append(part_result['text'])

    final_result = json.loads(rec.FinalResult())
    results.append(final_result['text'])

    # Convert spoken numbers to digits
    digit_transcription = ' '.join(results)
    for word, digit in num_word_to_digit.items():
        digit_transcription = digit_transcription.replace(word, digit)

    return digit_transcription

if __name__ == "__main__":
    if len(sys.argv) < 3:
        print("Usage: python transcribe.py <model_path> <audio_file>")
        sys.exit(1)

    model_path = sys.argv[1]
    audio_file = sys.argv[2]
    result = transcribe_audio(model_path, audio_file)
    print(result)
