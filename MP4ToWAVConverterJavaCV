import org.bytedeco.javacv.FFmpegFrameGrabber;
import org.bytedeco.javacv.Java2DFrameConverter;
import org.bytedeco.javacv.Frame;
import javax.sound.sampled.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;

public class MP4AudioDetection {

    public static void main(String[] args) {
        String filePath = "path/to/your/file.mp4";

        try {
            // Use FFmpegFrameGrabber to extract audio
            FFmpegFrameGrabber grabber = new FFmpegFrameGrabber(filePath);
            grabber.start();

            Frame frame;
            boolean hasAudio = false;
            double silenceThreshold = 0.02;  // Adjust this threshold based on your needs

            while ((frame = grabber.grab()) != null) {
                if (frame.samples != null) {
                    // Convert frame to byte array
                    ShortBuffer buffer = (ShortBuffer) frame.samples[0];
                    short[] audioData = new short[buffer.capacity()];
                    buffer.get(audioData);

                    // Analyze the audio data
                    for (short sample : audioData) {
                        double normalizedSample = sample / 32768.0;

                        if (Math.abs(normalizedSample) > silenceThreshold) {
                            hasAudio = true;
                            break;
                        }
                    }
                    if (hasAudio) break;
                }
            }

            if (hasAudio) {
                System.out.println("Audio detected in the file.");
            } else {
                System.out.println("The file contains only silence.");
            }

            grabber.stop();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
